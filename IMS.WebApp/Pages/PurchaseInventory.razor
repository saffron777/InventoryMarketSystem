@page "/purchase"

@inject IPurchaseInventoryUseCase PurchaseInventoryUseCase
@inject NavigationManager NavigationManager

@using IMS.WebApp.ViewModels
<h3>Purchase Inventory</h3>
<br />

@if (purchaseViewModel != null)
{
    <EditForm Model="purchaseViewModel" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <div class="form-group">
            <label for="po">Purchase Order</label>
            <InputText id="po" @bind-Value="purchaseViewModel.PurchaseOrder" class="form-control"></InputText>

        </div>
        <div class="form-group">
            <label for="inv">Inventory To Purchase</label>
            <ViewInventoriesComponent OnSelectInventory="OnSelectInventory" DisplaySearchResult="true">
            </ViewInventoriesComponent>   
            <InputText id="inv" class="form-control" disabled @bind-Value="@purchaseViewModel.InventoryName"></InputText>            
            <input type="hidden" value="@purchaseViewModel.InventoryId" />

            @if(selectedInventory != null)
            {
                <text>Price:</text>
                @selectedInventory?.Price.ToString("c")
            }
        </div>
        <div class="form-group">
            <label for="qty">Quantity</label>
            <InputNumber id="price" @bind-Value="purchaseViewModel.QuantityToPurchase" class="form-control"></InputNumber>
        </div>
        <br />
        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}



@code {

    private PurchaseViewModel purchaseViewModel = new PurchaseViewModel();
    public Inventory selectedInventory;

    private void OnSelectInventory(Inventory inventory)
    {
        selectedInventory = inventory;
        purchaseViewModel.InventoryId = inventory.InventoryId;
        purchaseViewModel.InventoryName = inventory.InventoryName;
    }

    private async Task OnValidSubmit()
    {
        await PurchaseInventoryUseCase.ExecuteAsync(
            purchaseViewModel.PurchaseOrder,
            selectedInventory,
            purchaseViewModel.QuantityToPurchase,
            "yo"
        );

        this.purchaseViewModel = new PurchaseViewModel();
        this.selectedInventory = null;
    }
}
